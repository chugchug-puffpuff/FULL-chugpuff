const express = require('express');
const jwt = require('jsonwebtoken');
const bodyParser = require('body-parser');
const cors = require('cors');

const app = express();
//const port = 4000;
const port = 8080;

// 미들웨어 설정
app.use(bodyParser.json());
app.use(cors());

// 사용자 데이터 예제 (실제 환경에서는 데이터베이스를 사용)
const users = [
  {
    "name": "아무개",
    "id": "asdf1111",
    "password": "1234",
    "job": "IT 개발/데이터",
    "jobKeyword": "앱개발"
  },
  {
    "name": "홍길동",
    "id": "qwer1111",
    "password": "1234",
    "job": "IT 개발/데이터",
    "jobKeyword": "머신러닝"
  },
  {
    "name": "테스트",
    "id": "abcd1111",
    "password": "1234",
    "job": "IT 개발/데이터",
    "jobKeyword": "와이어샤크"
  }
];

// 모의면접 내역 예제 
const interviewHistory = [
  {
    interviewId: '11111111',
    date: "2024.05.04 23:00:02",
    userName: '테스트',
    selectedType: '형식 없음',
    selectedFeedback: '즉시 피드백',
    interviewHistory: [
      {
        question: '즉시 피드백 회사 문화와 가치관이 자신의 것과 다를 경우 어떻게 대처하시겠습니까?',
        answer: '사용자의 즉시피드백 답변 내용입니다.',
        feedback: '가나다라마바사아자차카타파하'
      },
      {
        question: '11즉시피드백 회사 문화와 가치관이 자신의 것과 다를 경우 어떻게 대처하시겠습니까?',
        answer: '11사용자의 즉시피드백 답변 내용입니다.',
        feedback: '갸냐댜랴먀뱌샤야쟈챠캬탸퍄햐'
      }
    ],
    currentQuestionIndex: 2
  },
  {
    interviewId: '22222222',
    date: "2024.05.04 23:00:05",
    userName: '테스트',
    selectedType: '형식 없음',
    selectedFeedback: '전체 피드백',
    interviewHistory: [
      {
        question: '전체피드백 회사 문화와 가치관이 자신의 것과 다를 경우 어떻게 대처하시겠습니까?',
        answer: '사용자의 전체피드백 답변 내용입니다.'
      },
      {
        question: '11전체피드백 회사 문화와 가치관이 자신의 것과 다를 경우 어떻게 대처하시겠습니까?',
        answer: '11사용자의 즉시피드백 답변 내용입니다.'
      }
    ],
    feedback: '갸냐댜랴먀뱌샤야쟈챠캬탸퍄햐',
    currentQuestionIndex: 2
  }
]

// 자소서 피드백 반환
const selfIntroductionFeedback = [
  {
    "es_date": "2024-08-09",
    "es_feedback": "## 답변1 피드백:\n# 맞춤법 및 문법: 상세한 내용과 경험을 훌륭하게 설명했습니다. 단, \"다음\"과 같은 단어는 문맥에 맞게 사용해야 합니다. 예를 들어 \"대답 드리겠습니다\"가 바르게 됩니다.\n# 대체 단어 추천: \"실력을 쌓아갔습니다\" 부분은 \"실력을 향상시켰습니다\"로 바꿔보세요.\n# 질문 의도와 답변 방향성: 팀 프로젝트 경험을 통해 성장한 과정을 잘 보여준 답변입니다. 더욱 구체적인 기술적인 어려움과 해결과정을 더욱 강조하면 좋을 것 같습니다.\n\n## 답변2 피드백:\n# 맞춤법 및 문법: 매우 잘 작성되었습니다.\n# 대체 단어 추천: 특별한 수정 사항 없습니다.\n# 질문 의도와 답변 방향성: CS 지식과 기술적 역량에 대해 자세히 설명하여 요구사항을 충족시켰습니다. 더욱 구체적인 예시로 더욱 강조하면 좋을 것 같습니다.\n\n## 답변3 피드백:\n# 맞춤법 및 문법: 바르게 작성되었습니다. \n# 대체 단어 추천: \"파라미터의 이름을 사용되는 목적에 맞게 수정\" 부분은 \"파라미터의 이름을 목적에 맞게 수정\"으로 간결하게 수정할 수 있습니다.\n# 질문 의도와 답변 방향성: 어려운 기술적 문제 해결 경험을 잘 보여주었습니다. 좀더 어려운 기술적 문제와 해결과정을 더욱 강조하면 더욱 좋을 것 같습니다."
  }
]

// 모든 자소서 내역 조회
const allSelfIntroductionHistory = [
  {
      "member": {
          "user_id": 2,
          "id": "test2",
          "password": "$2a$10$dktFdU5Eg72u/liTIueNEO6dout9SgljoUql9Ar/g8tNjMdBbXdtO",
          "name": "name2",
          "job": "공공·복지",
          "jobKeyword": "가족상담",
          "email": "test2@test.com",
          "isAbove15": true,
          "privacyPolicyAccepted": true,
          "recordingAccepted": true
      },
      "details": [
          {
              "esd_no": 5,
              "eS_question": "테스트3 본인이 끝까지 파고들어 본 가장 의미있었던 개발 경험 또는 개발 활동에 대해 얘기해 주세요",
              "eS_answer": "올해 여름 진행했던 팀 프로젝트 경험에 대해 말씀드리겠습니다. 저는 웹 개발 공부를 하며 여러 개인 프로젝트를 수행하며 실력을 쌓아갔습니다. 하지만 혼자 강의를 통해 공부를 진행하다 보니 개인 프로젝트만 진행하였고 팀 프로젝트도 경험해보고 싶었습니다. 그래서 저는 프런트엔드와 백엔드를 구분해서 진행하는 프로젝트 진행을 위해 커뮤니티를 통해 팀을 구했습니다. 하지만 첫 팀 프로젝트 회의 날 저는 아무 말도 할 수 없었습니다. 지금까지 개인 프로젝트만 진행하다 보니 ERD 같은 기초적인 용어도 몰랐으며 Git 전략, slack, Notion 등 다양한 협업 툴에 대해서도 무지하였습니다. 그래서 저는 첫 회의 이후 저는 회의에서 나온 내용을 모두 필기해놓고 하나하나 검색을 통해 공부하였습니다. 또한 코드를 짜는 방법에 있어 기존에 제가 짜던 방식과 다른 부분이 많아 어려움을 겪었습니다. 그래서 프로젝트를 진행하면서 모르는 부분 하나하나 다 검색을 통해 사용법을 알아봤고 개인 프로젝트에 먼저 적용해 보고 사용법을 익히고 팀 프로젝트 코드에 적용하며 어려운 부분에 있어서는 팀원분들의 도움을 받아서 프로젝트를 진행하였습니다. 결국 제가 맡은 부분의 도메인, 서비스, 컨트롤러, DAO, Test 코드를 프로젝트를 통해 배운 방식을 통해 구현할 수 있었고 그 결과 첫 팀 프로젝트를 성공적으로 마무리할 수 있었습니다. 이후 진행한 두번째 팀 프로젝트 에서는 첫 프로젝트에서 제가 담당하지 않았던 부분의 파트를 담당해서 프로젝트를 진행하면서 더욱 성장할 수 있었습니다."
          },
          {
              "esd_no": 6,
              "eS_question": "지원하신 포지션과 연관지어, 학교 수업 또는 대외활동 등을 통해 습득한 'CS 지식'이나 '기술적 역량'에 대해 설명해 주세요.",
              "eS_answer": "개발자에게 에러는 항상 생각해야 할 문제입니다. 저는 에러를 해결할 줄 아는 능력이 개발자에게 중요하다고 생각합니다. 이런 에러 해결 능력의 기본이 되는 것이 컴퓨터에 대한 기초지식입니다. 저는 서버 개발 공부뿐만 아니라 컴퓨터 기초 지식인 자료구조, 알고리즘, OS, 컴퓨터 구조, 네트워크 등 다양한 공부를 학교 수업과 책, 과제 등을 통해 배운 내용을 예습 및 복습을 통해 제 것으로 만들기 위해 노력하였고 그 결과 대부분의 컴퓨터 전공과목에서 좋은 성적을 받아 전공학점이 4.5점 만점에 3.96이라는 좋은 결과를 얻을 수 있었습니다. 그뿐만 아니라 주 언어로 사용하는 Java 역시 Java의 정석 책을 통해 기초적인 람다 함수 및 Stream 같은 고급 문법 역시 공부하여 프로젝트에 적용하고 있으며 인터넷 강의와 책을 통해 Spring의 기초원리 특징 등에 대해 꾸준히 공부하며 많은 상황에 대처할 수 있는 개발자가 되기 위해 노력하고 있습니다."
          },
          {
              "esd_no": 7,
              "eS_question": "본인의 SW개발 활동 경험 중 다른 사람과 함께 같은 목표를 위해 노력한 경험 또는 어려운 기술적 문제를 해결한 경험에 대해 얘기해 주세요.",
              "eS_answer": "최근 인턴십 진행 중인 회사에서 기존의 서비스 코드에 있는 파라미터의 이름을 사용되는 목적에 맞게 수정하는 작업을 진행하였습니다. 넘어온 파라미터를 빌드패턴으로 제가 만든 파라미터로 변경 후 서버를 실행하니 기존에 작동하던 페이징이 작동을 하지 않았습니다. 원인을 찾아보기 위해 코드 중간중간에 로그를 찍어보며 넘어오는 값을 확인해본 결과 DAO 에서 조회함수의 들어가는 파라미터는 기존과 같은데 나올 때는 제가 작성한 코드는 페이징이 적용이 안 되는 것을 확인했습니다. 그래서 Mybatis XML 파일을 확인해봤지만 쿼리문에는 페이징이 적용되는 코드는 없어서 원인을 모르다가 Service 단에 있는 메서드에 붙어있는 어노테이션의 속성 중 하나에 들어가 있는 true, false 여부에 따라 쿼리 문이 XML 에서 적용이 되느냐 되지 않느냐의 차이였다는 것을 파악하였습니다. 그 이후 여러 가지 수정 끝에 파라미터 수정을 성공적으로 끝마칠 수 있었습니다. 이 경험을 통해서 프레임워크는 그저 가져다 쓰는 것이 아니라 직접 사용해보고 이해해야 된다는 것을 깨닫게 되었습니다."
          }
      ],
      "save": false,
      "es_no": 3,
      "es_date": "2024-08-09",
      "es_feedback": "피드백 테스트입니다."
  },
  {
      "member": {
          "user_id": 2,
          "id": "test2",
          "password": "$2a$10$dktFdU5Eg72u/liTIueNEO6dout9SgljoUql9Ar/g8tNjMdBbXdtO",
          "name": "name2",
          "job": "공공·복지",
          "jobKeyword": "가족상담",
          "email": "test2@test.com",
          "isAbove15": true,
          "privacyPolicyAccepted": true,
          "recordingAccepted": true
      },
      "details": [
          {
              "esd_no": 8,
              "eS_question": "테스트4 본인이 끝까지 파고들어 본 가장 의미있었던 개발 경험 또는 개발 활동에 대해 얘기해 주세요",
              "eS_answer": "올해 여름 진행했던 팀 프로젝트 경험에 대해 말씀드리겠습니다. 저는 웹 개발 공부를 하며 여러 개인 프로젝트를 수행하며 실력을 쌓아갔습니다. 하지만 혼자 강의를 통해 공부를 진행하다 보니 개인 프로젝트만 진행하였고 팀 프로젝트도 경험해보고 싶었습니다. 그래서 저는 프런트엔드와 백엔드를 구분해서 진행하는 프로젝트 진행을 위해 커뮤니티를 통해 팀을 구했습니다. 하지만 첫 팀 프로젝트 회의 날 저는 아무 말도 할 수 없었습니다. 지금까지 개인 프로젝트만 진행하다 보니 ERD 같은 기초적인 용어도 몰랐으며 Git 전략, slack, Notion 등 다양한 협업 툴에 대해서도 무지하였습니다. 그래서 저는 첫 회의 이후 저는 회의에서 나온 내용을 모두 필기해놓고 하나하나 검색을 통해 공부하였습니다. 또한 코드를 짜는 방법에 있어 기존에 제가 짜던 방식과 다른 부분이 많아 어려움을 겪었습니다. 그래서 프로젝트를 진행하면서 모르는 부분 하나하나 다 검색을 통해 사용법을 알아봤고 개인 프로젝트에 먼저 적용해 보고 사용법을 익히고 팀 프로젝트 코드에 적용하며 어려운 부분에 있어서는 팀원분들의 도움을 받아서 프로젝트를 진행하였습니다. 결국 제가 맡은 부분의 도메인, 서비스, 컨트롤러, DAO, Test 코드를 프로젝트를 통해 배운 방식을 통해 구현할 수 있었고 그 결과 첫 팀 프로젝트를 성공적으로 마무리할 수 있었습니다. 이후 진행한 두번째 팀 프로젝트 에서는 첫 프로젝트에서 제가 담당하지 않았던 부분의 파트를 담당해서 프로젝트를 진행하면서 더욱 성장할 수 있었습니다."
          },
          {
              "esd_no": 9,
              "eS_question": "지원하신 포지션과 연관지어, 학교 수업 또는 대외활동 등을 통해 습득한 'CS 지식'이나 '기술적 역량'에 대해 설명해 주세요.",
              "eS_answer": "개발자에게 에러는 항상 생각해야 할 문제입니다. 저는 에러를 해결할 줄 아는 능력이 개발자에게 중요하다고 생각합니다. 이런 에러 해결 능력의 기본이 되는 것이 컴퓨터에 대한 기초지식입니다. 저는 서버 개발 공부뿐만 아니라 컴퓨터 기초 지식인 자료구조, 알고리즘, OS, 컴퓨터 구조, 네트워크 등 다양한 공부를 학교 수업과 책, 과제 등을 통해 배운 내용을 예습 및 복습을 통해 제 것으로 만들기 위해 노력하였고 그 결과 대부분의 컴퓨터 전공과목에서 좋은 성적을 받아 전공학점이 4.5점 만점에 3.96이라는 좋은 결과를 얻을 수 있었습니다. 그뿐만 아니라 주 언어로 사용하는 Java 역시 Java의 정석 책을 통해 기초적인 람다 함수 및 Stream 같은 고급 문법 역시 공부하여 프로젝트에 적용하고 있으며 인터넷 강의와 책을 통해 Spring의 기초원리 특징 등에 대해 꾸준히 공부하며 많은 상황에 대처할 수 있는 개발자가 되기 위해 노력하고 있습니다."
          },
          {
              "esd_no": 10,
              "eS_question": "본인의 SW개발 활동 경험 중 다른 사람과 함께 같은 목표를 위해 노력한 경험 또는 어려운 기술적 문제를 해결한 경험에 대해 얘기해 주세요.",
              "eS_answer": "최근 인턴십 진행 중인 회사에서 기존의 서비스 코드에 있는 파라미터의 이름을 사용되는 목적에 맞게 수정하는 작업을 진행하였습니다. 넘어온 파라미터를 빌드패턴으로 제가 만든 파라미터로 변경 후 서버를 실행하니 기존에 작동하던 페이징이 작동을 하지 않았습니다. 원인을 찾아보기 위해 코드 중간중간에 로그를 찍어보며 넘어오는 값을 확인해본 결과 DAO 에서 조회함수의 들어가는 파라미터는 기존과 같은데 나올 때는 제가 작성한 코드는 페이징이 적용이 안 되는 것을 확인했습니다. 그래서 Mybatis XML 파일을 확인해봤지만 쿼리문에는 페이징이 적용되는 코드는 없어서 원인을 모르다가 Service 단에 있는 메서드에 붙어있는 어노테이션의 속성 중 하나에 들어가 있는 true, false 여부에 따라 쿼리 문이 XML 에서 적용이 되느냐 되지 않느냐의 차이였다는 것을 파악하였습니다. 그 이후 여러 가지 수정 끝에 파라미터 수정을 성공적으로 끝마칠 수 있었습니다. 이 경험을 통해서 프레임워크는 그저 가져다 쓰는 것이 아니라 직접 사용해보고 이해해야 된다는 것을 깨닫게 되었습니다."
          }
      ],
      "save": false,
      "es_no": 4,
      "es_date": "2024-08-09",
      "es_feedback": "피드백 테스트 입니다."
  },
  {
    "member": {
        "user_id": 3,
        "id": "test3",
        "password": "$2a$10$G5CNvxO7nEUx8GnzgrMQqO1RtrvORs5xcteuCm6/AIk2WMDLz5rau",
        "name": "name3",
        "job": "IT개발·데이터",
        "jobKeyword": "SpringBoot",
        "email": "test2@test.com",
        "isAbove15": true,
        "privacyPolicyAccepted": true,
        "recordingAccepted": true
    },
    "details": [
        {
            "esd_no": 36,
            "eS_question": "테스트15 본인이 끝까지 파고들어 본 가장 의미있었던 개발 경험 또는 개발 활동에 대해 얘기해 주세요",
            "eS_answer": "올해 여름 진행했던 팀 프로젝트 경험에 대해 말씀드리겠습니다. 저는 웹 개발 공부를 하며 여러 개인 프로젝트를 수행하며 실력을 쌓아갔습니다. 하지만 혼자 강의를 통해 공부를 진행하다 보니 개인 프로젝트만 진행하였고 팀 프로젝트도 경험해보고 싶었습니다. 그래서 저는 프런트엔드와 백엔드를 구분해서 진행하는 프로젝트 진행을 위해 커뮤니티를 통해 팀을 구했습니다. 하지만 첫 팀 프로젝트 회의 날 저는 아무 말도 할 수 없었습니다. 지금까지 개인 프로젝트만 진행하다 보니 ERD 같은 기초적인 용어도 몰랐으며 Git 전략, slack, Notion 등 다양한 협업 툴에 대해서도 무지하였습니다. 그래서 저는 첫 회의 이후 저는 회의에서 나온 내용을 모두 필기해놓고 하나하나 검색을 통해 공부하였습니다. 또한 코드를 짜는 방법에 있어 기존에 제가 짜던 방식과 다른 부분이 많아 어려움을 겪었습니다. 그래서 프로젝트를 진행하면서 모르는 부분 하나하나 다 검색을 통해 사용법을 알아봤고 개인 프로젝트에 먼저 적용해 보고 사용법을 익히고 팀 프로젝트 코드에 적용하며 어려운 부분에 있어서는 팀원분들의 도움을 받아서 프로젝트를 진행하였습니다. 결국 제가 맡은 부분의 도메인, 서비스, 컨트롤러, DAO, Test 코드를 프로젝트를 통해 배운 방식을 통해 구현할 수 있었고 그 결과 첫 팀 프로젝트를 성공적으로 마무리할 수 있었습니다. 이후 진행한 두번째 팀 프로젝트 에서는 첫 프로젝트에서 제가 담당하지 않았던 부분의 파트를 담당해서 프로젝트를 진행하면서 더욱 성장할 수 있었습니다."
        },
        {
            "esd_no": 37,
            "eS_question": "지원하신 포지션과 연관지어, 학교 수업 또는 대외활동 등을 통해 습득한 'CS 지식'이나 '기술적 역량'에 대해 설명해 주세요.",
            "eS_answer": "개발자에게 에러는 항상 생각해야 할 문제입니다. 저는 에러를 해결할 줄 아는 능력이 개발자에게 중요하다고 생각합니다. 이런 에러 해결 능력의 기본이 되는 것이 컴퓨터에 대한 기초지식입니다. 저는 서버 개발 공부뿐만 아니라 컴퓨터 기초 지식인 자료구조, 알고리즘, OS, 컴퓨터 구조, 네트워크 등 다양한 공부를 학교 수업과 책, 과제 등을 통해 배운 내용을 예습 및 복습을 통해 제 것으로 만들기 위해 노력하였고 그 결과 대부분의 컴퓨터 전공과목에서 좋은 성적을 받아 전공학점이 4.5점 만점에 3.96이라는 좋은 결과를 얻을 수 있었습니다. 그뿐만 아니라 주 언어로 사용하는 Java 역시 Java의 정석 책을 통해 기초적인 람다 함수 및 Stream 같은 고급 문법 역시 공부하여 프로젝트에 적용하고 있으며 인터넷 강의와 책을 통해 Spring의 기초원리 특징 등에 대해 꾸준히 공부하며 많은 상황에 대처할 수 있는 개발자가 되기 위해 노력하고 있습니다."
        },
        {
            "esd_no": 38,
            "eS_question": "본인의 SW개발 활동 경험 중 다른 사람과 함께 같은 목표를 위해 노력한 경험 또는 어려운 기술적 문제를 해결한 경험에 대해 얘기해 주세요.",
            "eS_answer": "최근 인턴십 진행 중인 회사에서 기존의 서비스 코드에 있는 파라미터의 이름을 사용되는 목적에 맞게 수정하는 작업을 진행하였습니다. 넘어온 파라미터를 빌드패턴으로 제가 만든 파라미터로 변경 후 서버를 실행하니 기존에 작동하던 페이징이 작동을 하지 않았습니다. 원인을 찾아보기 위해 코드 중간중간에 로그를 찍어보며 넘어오는 값을 확인해본 결과 DAO 에서 조회함수의 들어가는 파라미터는 기존과 같은데 나올 때는 제가 작성한 코드는 페이징이 적용이 안 되는 것을 확인했습니다. 그래서 Mybatis XML 파일을 확인해봤지만 쿼리문에는 페이징이 적용되는 코드는 없어서 원인을 모르다가 Service 단에 있는 메서드에 붙어있는 어노테이션의 속성 중 하나에 들어가 있는 true, false 여부에 따라 쿼리 문이 XML 에서 적용이 되느냐 되지 않느냐의 차이였다는 것을 파악하였습니다. 그 이후 여러 가지 수정 끝에 파라미터 수정을 성공적으로 끝마칠 수 있었습니다. 이 경험을 통해서 프레임워크는 그저 가져다 쓰는 것이 아니라 직접 사용해보고 이해해야 된다는 것을 깨닫게 되었습니다."
        }
    ],
    "save": true,
    "es_no": 15,
    "es_feedback": "## 답변1 피드백:\n# 맞춤법 및 문법: 상세한 내용과 경험을 훌륭하게 설명했습니다. 단, \"다음\"과 같은 단어는 문맥에 맞게 사용해야 합니다. 예를 들어 \"대답 드리겠습니다\"가 바르게 됩니다.\n# 대체 단어 추천: \"실력을 쌓아갔습니다\" 부분은 \"실력을 향상시켰습니다\"로 바꿔보세요.\n# 질문 의도와 답변 방향성: 팀 프로젝트 경험을 통해 성장한 과정을 잘 보여준 답변입니다. 더욱 구체적인 기술적인 어려움과 해결과정을 더욱 강조하면 좋을 것 같습니다.\n\n## 답변2 피드백:\n# 맞춤법 및 문법: 매우 잘 작성되었습니다.\n# 대체 단어 추천: 특별한 수정 사항 없습니다.\n# 질문 의도와 답변 방향성: CS 지식과 기술적 역량에 대해 자세히 설명하여 요구사항을 충족시켰습니다. 더욱 구체적인 예시로 더욱 강조하면 좋을 것 같습니다.\n\n## 답변3 피드백:\n# 맞춤법 및 문법: 바르게 작성되었습니다. \n# 대체 단어 추천: \"파라미터의 이름을 사용되는 목적에 맞게 수정\" 부분은 \"파라미터의 이름을 목적에 맞게 수정\"으로 간결하게 수정할 수 있습니다.\n# 질문 의도와 답변 방향성: 어려운 기술적 문제 해결 경험을 잘 보여주었습니다. 좀더 어려운 기술적 문제와 해결과정을 더욱 강조하면 더욱 좋을 것 같습니다.",
    "es_date": "2024-08-12"
  },
  {
    "member": {
        "user_id": 3,
        "id": "test3",
        "password": "$2a$10$G5CNvxO7nEUx8GnzgrMQqO1RtrvORs5xcteuCm6/AIk2WMDLz5rau",
        "name": "name3",
        "job": "IT개발·데이터",
        "jobKeyword": "SpringBoot",
        "email": "test2@test.com",
        "isAbove15": true,
        "privacyPolicyAccepted": true,
        "recordingAccepted": true
    },
    "details": [
        {
            "esd_no": 39,
            "eS_question": "테스트16 본인이 끝까지 파고들어 본 가장 의미있었던 개발 경험 또는 개발 활동에 대해 얘기해 주세요",
            "eS_answer": "올해 여름 진행했던 팀 프로젝트 경험에 대해 말씀드리겠습니다. 저는 웹 개발 공부를 하며 여러 개인 프로젝트를 수행하며 실력을 쌓아갔습니다. 하지만 혼자 강의를 통해 공부를 진행하다 보니 개인 프로젝트만 진행하였고 팀 프로젝트도 경험해보고 싶었습니다. 그래서 저는 프런트엔드와 백엔드를 구분해서 진행하는 프로젝트 진행을 위해 커뮤니티를 통해 팀을 구했습니다. 하지만 첫 팀 프로젝트 회의 날 저는 아무 말도 할 수 없었습니다. 지금까지 개인 프로젝트만 진행하다 보니 ERD 같은 기초적인 용어도 몰랐으며 Git 전략, slack, Notion 등 다양한 협업 툴에 대해서도 무지하였습니다. 그래서 저는 첫 회의 이후 저는 회의에서 나온 내용을 모두 필기해놓고 하나하나 검색을 통해 공부하였습니다. 또한 코드를 짜는 방법에 있어 기존에 제가 짜던 방식과 다른 부분이 많아 어려움을 겪었습니다. 그래서 프로젝트를 진행하면서 모르는 부분 하나하나 다 검색을 통해 사용법을 알아봤고 개인 프로젝트에 먼저 적용해 보고 사용법을 익히고 팀 프로젝트 코드에 적용하며 어려운 부분에 있어서는 팀원분들의 도움을 받아서 프로젝트를 진행하였습니다. 결국 제가 맡은 부분의 도메인, 서비스, 컨트롤러, DAO, Test 코드를 프로젝트를 통해 배운 방식을 통해 구현할 수 있었고 그 결과 첫 팀 프로젝트를 성공적으로 마무리할 수 있었습니다. 이후 진행한 두번째 팀 프로젝트 에서는 첫 프로젝트에서 제가 담당하지 않았던 부분의 파트를 담당해서 프로젝트를 진행하면서 더욱 성장할 수 있었습니다."
        },
        {
            "esd_no": 40,
            "eS_question": "지원하신 포지션과 연관지어, 학교 수업 또는 대외활동 등을 통해 습득한 'CS 지식'이나 '기술적 역량'에 대해 설명해 주세요.",
            "eS_answer": "개발자에게 에러는 항상 생각해야 할 문제입니다. 저는 에러를 해결할 줄 아는 능력이 개발자에게 중요하다고 생각합니다. 이런 에러 해결 능력의 기본이 되는 것이 컴퓨터에 대한 기초지식입니다. 저는 서버 개발 공부뿐만 아니라 컴퓨터 기초 지식인 자료구조, 알고리즘, OS, 컴퓨터 구조, 네트워크 등 다양한 공부를 학교 수업과 책, 과제 등을 통해 배운 내용을 예습 및 복습을 통해 제 것으로 만들기 위해 노력하였고 그 결과 대부분의 컴퓨터 전공과목에서 좋은 성적을 받아 전공학점이 4.5점 만점에 3.96이라는 좋은 결과를 얻을 수 있었습니다. 그뿐만 아니라 주 언어로 사용하는 Java 역시 Java의 정석 책을 통해 기초적인 람다 함수 및 Stream 같은 고급 문법 역시 공부하여 프로젝트에 적용하고 있으며 인터넷 강의와 책을 통해 Spring의 기초원리 특징 등에 대해 꾸준히 공부하며 많은 상황에 대처할 수 있는 개발자가 되기 위해 노력하고 있습니다."
        },
        {
            "esd_no": 41,
            "eS_question": "본인의 SW개발 활동 경험 중 다른 사람과 함께 같은 목표를 위해 노력한 경험 또는 어려운 기술적 문제를 해결한 경험에 대해 얘기해 주세요.",
            "eS_answer": "최근 인턴십 진행 중인 회사에서 기존의 서비스 코드에 있는 파라미터의 이름을 사용되는 목적에 맞게 수정하는 작업을 진행하였습니다. 넘어온 파라미터를 빌드패턴으로 제가 만든 파라미터로 변경 후 서버를 실행하니 기존에 작동하던 페이징이 작동을 하지 않았습니다. 원인을 찾아보기 위해 코드 중간중간에 로그를 찍어보며 넘어오는 값을 확인해본 결과 DAO 에서 조회함수의 들어가는 파라미터는 기존과 같은데 나올 때는 제가 작성한 코드는 페이징이 적용이 안 되는 것을 확인했습니다. 그래서 Mybatis XML 파일을 확인해봤지만 쿼리문에는 페이징이 적용되는 코드는 없어서 원인을 모르다가 Service 단에 있는 메서드에 붙어있는 어노테이션의 속성 중 하나에 들어가 있는 true, false 여부에 따라 쿼리 문이 XML 에서 적용이 되느냐 되지 않느냐의 차이였다는 것을 파악하였습니다. 그 이후 여러 가지 수정 끝에 파라미터 수정을 성공적으로 끝마칠 수 있었습니다. 이 경험을 통해서 프레임워크는 그저 가져다 쓰는 것이 아니라 직접 사용해보고 이해해야 된다는 것을 깨닫게 되었습니다."
        }
    ],
    "save": false,
    "es_no": 16,
    "es_feedback": "## 답변1 피드백:\n# 맞춤법 및 문법: 문장 중간에 쉼표(,)를 사용하는 경우가 많은데, 이는 긴 문장을 분리해주는 역할을 하는데 사용됩니다. 띄어쓰기, 마침표 등을 적절하게 활용하여 문장을 나누는 것이 권장됩니다.\n# 대체 단어 추천: '무지하였습니다' 대신 '알지 못했습니다', '어려움을 겪었습니다' 대신 '어려움을 겪었고', '결국' 대신 '마침내' 등의 표현을 사용하여 문장을 다양하고 자연스럽게 만들어보세요.\n# 질문 의도와 답변 방향성: 이 질문은 팀 프로젝트 경험 중에서의 성과와 성장 과정에 대해 파악하고자 하는 것으로 보입니다. 프로젝트 진행 중 겪은 어려움, 해결방법, 성과 등을 구체적으로 설명하여 어떻게 성장하고 배웠는지를 강조해보세요.\n\n## 답변2 피드백:\n# 맞춤법 및 문법: 문장 끝에 쉼표(,)를 사용하는 경우와 오타 수정이 필요합니다. 띄어쓰기, 맞춤법 등을 신경써서 내용을 수정해주세요.\n# 대체 단어 추천: '꾸준히' 대신 '지속적으로', '모든' 대신 '모든 종류의' 등으로 문장을 다양하게 표현해보세요.\n# 질문 의도와 답변 방향성: 이 질문은 CS 지식과 기술적 역량에 대한 설명을 요구하고 있습니다. 어떻게 그 지식을 습득하고 활용했는지, 어떤 노력을 기울여왔는지 구체적으로 언급하여 기술력을 강조해보세요.\n\n## 답변3 피드백:\n# 맞춤법 및 문법: 의미 전달이 조금 어색한 부분이 있습니다. 문장 구조와 전달하는 내용을 다듬어 자연스럽게 수정해보세요.\n# 대체 단어 추천: '깨닫게 되었습니다' 대신 '인식하게 되었습니다', '여러 가지 수정 끝에' 대신 '다양한 수정을 거치고 나서' 등으로 문장을 다양하게 변화시켜 보세요.\n# 질문 의도와 답변 방향성: 이 질문은 다른 사람과 협업하거나 기술적 문제를 해결한 경험에 대한 내용을 요구합니다. 어떤 어려움을 겪었으며, 어떻게 문제를 해결했는지, 그 과정에서 얻은 교훈 등을 구체적으로 표현하여 기술적인 역량과 협업 능력을 강조해보세요.\n\n## 첨삭된 자기소개서:\n# 질문1: 본인이 끝까지 파고들어 본 가장 의미있었던 개발 경험 또는 개발 활동에 대해 얘기해 주세요\n# 답변1: 올해 여름에 진행한 팀 프로젝트 경험에 대해 말씀드리겠습니다. 저는 웹 개발 공부를 하며 여러 개인 프로젝트를 수행하면서 실력을 쌓아왔습니다. 하지만 혼자 공부를 진행하다 보니 팀 프로젝트 경험이 부족했습니다. 그래서 팀을 구성하여 프런트엔드와 백엔드를 나눠 작업하는 프로젝트에 참여하였습니다. 처음에는 기초적인 용어부터 Git 전략, 협업 툴까지 공부해야 했고, 처음에는 어려움을 겪었습니다. 그러나 끈질기게 공부하고 팀원들과 협업하여 프로젝트를 성공적으로 완료할 수 있었습니다. 이 경험을 통해 성장하고 배울 수 있는 기회였습니다.\n\n# 질문2: 지원하신 포지션과 연관지어, 학교 수업 또는 대외활동 등을 통해 습득한 'CS 지식'이나 '기술적 역량'에 대해 설명해 주세요.\n# 답변2: 개발자로서 항상 에러를 해결하는 것이 중요하다고 생각합니다. 이를 위해 컴퓨터 기초 지식뿐만 아니라 자료구조, 알고리즘, 운영체제 등 다양한 공부를 하였습니다. 학업에 최선을 다하며 Java와 Spring 등의 기술에 대한 이해를 높이기 위해 노력했습니다. 이를 통해 다양한 상황에 대처할 수 있는 기술적 역량을 갖추기 위해 노력하고 있습니다.\n\n# 질문3: 본인의 SW개발 활동 경험 중 다른 사람과 함께 같은 목표를 위해 노력한 경험 또는 어려운 기술적 문제를 해결한 경험에 대해 얘기해 주세요.\n# 답변3: 최근 인턴십 중인 회사에서 기존 서비스 코드를 수정하는 작업을 진행했습니다. 팀원들과 협업하여 파라미터 수정 작업을 성공적으로 마무리하였습니다. 어려움을 겪었지만 끈질기게 문제를 해결하며 프로젝트에 성공적으로 기여할 수 있었습니다. 이 경험을 통해 협업 능력과 문제 해결능력을 키워가고 있습니다.",
    "es_date": "2024-08-12"
  }
]

// 특정 자소서 내역 조회
const specificSelfIntroductionHistory = [
  {
    "member": {
        "user_id": 3,
        "id": "test3",
        "password": "$2a$10$G5CNvxO7nEUx8GnzgrMQqO1RtrvORs5xcteuCm6/AIk2WMDLz5rau",
        "name": "name3",
        "job": "IT개발·데이터",
        "jobKeyword": "SpringBoot",
        "email": "test2@test.com",
        "isAbove15": true,
        "privacyPolicyAccepted": true,
        "recordingAccepted": true
    },
    "details": [
        {
            "esd_no": 39,
            "eS_question": "본인이 끝까지 파고들어 본 가장 의미있었던 개발 경험 또는 개발 활동에 대해 얘기해 주세요",
            "eS_answer": "올해 여름 진행했던 팀 프로젝트 경험에 대해 말씀드리겠습니다. 저는 웹 개발 공부를 하며 여러 개인 프로젝트를 수행하며 실력을 쌓아갔습니다. 하지만 혼자 강의를 통해 공부를 진행하다 보니 개인 프로젝트만 진행하였고 팀 프로젝트도 경험해보고 싶었습니다. 그래서 저는 프런트엔드와 백엔드를 구분해서 진행하는 프로젝트 진행을 위해 커뮤니티를 통해 팀을 구했습니다. 하지만 첫 팀 프로젝트 회의 날 저는 아무 말도 할 수 없었습니다. 지금까지 개인 프로젝트만 진행하다 보니 ERD 같은 기초적인 용어도 몰랐으며 Git 전략, slack, Notion 등 다양한 협업 툴에 대해서도 무지하였습니다. 그래서 저는 첫 회의 이후 저는 회의에서 나온 내용을 모두 필기해놓고 하나하나 검색을 통해 공부하였습니다. 또한 코드를 짜는 방법에 있어 기존에 제가 짜던 방식과 다른 부분이 많아 어려움을 겪었습니다. 그래서 프로젝트를 진행하면서 모르는 부분 하나하나 다 검색을 통해 사용법을 알아봤고 개인 프로젝트에 먼저 적용해 보고 사용법을 익히고 팀 프로젝트 코드에 적용하며 어려운 부분에 있어서는 팀원분들의 도움을 받아서 프로젝트를 진행하였습니다. 결국 제가 맡은 부분의 도메인, 서비스, 컨트롤러, DAO, Test 코드를 프로젝트를 통해 배운 방식을 통해 구현할 수 있었고 그 결과 첫 팀 프로젝트를 성공적으로 마무리할 수 있었습니다. 이후 진행한 두번째 팀 프로젝트 에서는 첫 프로젝트에서 제가 담당하지 않았던 부분의 파트를 담당해서 프로젝트를 진행하면서 더욱 성장할 수 있었습니다."
        },
        {
            "esd_no": 40,
            "eS_question": "지원하신 포지션과 연관지어, 학교 수업 또는 대외활동 등을 통해 습득한 'CS 지식'이나 '기술적 역량'에 대해 설명해 주세요.",
            "eS_answer": "개발자에게 에러는 항상 생각해야 할 문제입니다. 저는 에러를 해결할 줄 아는 능력이 개발자에게 중요하다고 생각합니다. 이런 에러 해결 능력의 기본이 되는 것이 컴퓨터에 대한 기초지식입니다. 저는 서버 개발 공부뿐만 아니라 컴퓨터 기초 지식인 자료구조, 알고리즘, OS, 컴퓨터 구조, 네트워크 등 다양한 공부를 학교 수업과 책, 과제 등을 통해 배운 내용을 예습 및 복습을 통해 제 것으로 만들기 위해 노력하였고 그 결과 대부분의 컴퓨터 전공과목에서 좋은 성적을 받아 전공학점이 4.5점 만점에 3.96이라는 좋은 결과를 얻을 수 있었습니다. 그뿐만 아니라 주 언어로 사용하는 Java 역시 Java의 정석 책을 통해 기초적인 람다 함수 및 Stream 같은 고급 문법 역시 공부하여 프로젝트에 적용하고 있으며 인터넷 강의와 책을 통해 Spring의 기초원리 특징 등에 대해 꾸준히 공부하며 많은 상황에 대처할 수 있는 개발자가 되기 위해 노력하고 있습니다."
        },
        {
            "esd_no": 41,
            "eS_question": "본인의 SW개발 활동 경험 중 다른 사람과 함께 같은 목표를 위해 노력한 경험 또는 어려운 기술적 문제를 해결한 경험에 대해 얘기해 주세요.",
            "eS_answer": "최근 인턴십 진행 중인 회사에서 기존의 서비스 코드에 있는 파라미터의 이름을 사용되는 목적에 맞게 수정하는 작업을 진행하였습니다. 넘어온 파라미터를 빌드패턴으로 제가 만든 파라미터로 변경 후 서버를 실행하니 기존에 작동하던 페이징이 작동을 하지 않았습니다. 원인을 찾아보기 위해 코드 중간중간에 로그를 찍어보며 넘어오는 값을 확인해본 결과 DAO 에서 조회함수의 들어가는 파라미터는 기존과 같은데 나올 때는 제가 작성한 코드는 페이징이 적용이 안 되는 것을 확인했습니다. 그래서 Mybatis XML 파일을 확인해봤지만 쿼리문에는 페이징이 적용되는 코드는 없어서 원인을 모르다가 Service 단에 있는 메서드에 붙어있는 어노테이션의 속성 중 하나에 들어가 있는 true, false 여부에 따라 쿼리 문이 XML 에서 적용이 되느냐 되지 않느냐의 차이였다는 것을 파악하였습니다. 그 이후 여러 가지 수정 끝에 파라미터 수정을 성공적으로 끝마칠 수 있었습니다. 이 경험을 통해서 프레임워크는 그저 가져다 쓰는 것이 아니라 직접 사용해보고 이해해야 된다는 것을 깨닫게 되었습니다."
        }
    ],
    "save": false,
    "es_no": 16,
    "es_feedback": "## 답변1 피드백:\n# 맞춤법 및 문법: 문장 중간에 쉼표(,)를 사용하는 경우가 많은데, 이는 긴 문장을 분리해주는 역할을 하는데 사용됩니다. 띄어쓰기, 마침표 등을 적절하게 활용하여 문장을 나누는 것이 권장됩니다.\n# 대체 단어 추천: '무지하였습니다' 대신 '알지 못했습니다', '어려움을 겪었습니다' 대신 '어려움을 겪었고', '결국' 대신 '마침내' 등의 표현을 사용하여 문장을 다양하고 자연스럽게 만들어보세요.\n# 질문 의도와 답변 방향성: 이 질문은 팀 프로젝트 경험 중에서의 성과와 성장 과정에 대해 파악하고자 하는 것으로 보입니다. 프로젝트 진행 중 겪은 어려움, 해결방법, 성과 등을 구체적으로 설명하여 어떻게 성장하고 배웠는지를 강조해보세요.\n\n## 답변2 피드백:\n# 맞춤법 및 문법: 문장 끝에 쉼표(,)를 사용하는 경우와 오타 수정이 필요합니다. 띄어쓰기, 맞춤법 등을 신경써서 내용을 수정해주세요.\n# 대체 단어 추천: '꾸준히' 대신 '지속적으로', '모든' 대신 '모든 종류의' 등으로 문장을 다양하게 표현해보세요.\n# 질문 의도와 답변 방향성: 이 질문은 CS 지식과 기술적 역량에 대한 설명을 요구하고 있습니다. 어떻게 그 지식을 습득하고 활용했는지, 어떤 노력을 기울여왔는지 구체적으로 언급하여 기술력을 강조해보세요.\n\n## 답변3 피드백:\n# 맞춤법 및 문법: 의미 전달이 조금 어색한 부분이 있습니다. 문장 구조와 전달하는 내용을 다듬어 자연스럽게 수정해보세요.\n# 대체 단어 추천: '깨닫게 되었습니다' 대신 '인식하게 되었습니다', '여러 가지 수정 끝에' 대신 '다양한 수정을 거치고 나서' 등으로 문장을 다양하게 변화시켜 보세요.\n# 질문 의도와 답변 방향성: 이 질문은 다른 사람과 협업하거나 기술적 문제를 해결한 경험에 대한 내용을 요구합니다. 어떤 어려움을 겪었으며, 어떻게 문제를 해결했는지, 그 과정에서 얻은 교훈 등을 구체적으로 표현하여 기술적인 역량과 협업 능력을 강조해보세요.\n\n## 첨삭된 자기소개서:\n# 질문1: 본인이 끝까지 파고들어 본 가장 의미있었던 개발 경험 또는 개발 활동에 대해 얘기해 주세요\n# 답변1: 올해 여름에 진행한 팀 프로젝트 경험에 대해 말씀드리겠습니다. 저는 웹 개발 공부를 하며 여러 개인 프로젝트를 수행하면서 실력을 쌓아왔습니다. 하지만 혼자 공부를 진행하다 보니 팀 프로젝트 경험이 부족했습니다. 그래서 팀을 구성하여 프런트엔드와 백엔드를 나눠 작업하는 프로젝트에 참여하였습니다. 처음에는 기초적인 용어부터 Git 전략, 협업 툴까지 공부해야 했고, 처음에는 어려움을 겪었습니다. 그러나 끈질기게 공부하고 팀원들과 협업하여 프로젝트를 성공적으로 완료할 수 있었습니다. 이 경험을 통해 성장하고 배울 수 있는 기회였습니다.\n\n# 질문2: 지원하신 포지션과 연관지어, 학교 수업 또는 대외활동 등을 통해 습득한 'CS 지식'이나 '기술적 역량'에 대해 설명해 주세요.\n# 답변2: 개발자로서 항상 에러를 해결하는 것이 중요하다고 생각합니다. 이를 위해 컴퓨터 기초 지식뿐만 아니라 자료구조, 알고리즘, 운영체제 등 다양한 공부를 하였습니다. 학업에 최선을 다하며 Java와 Spring 등의 기술에 대한 이해를 높이기 위해 노력했습니다. 이를 통해 다양한 상황에 대처할 수 있는 기술적 역량을 갖추기 위해 노력하고 있습니다.\n\n# 질문3: 본인의 SW개발 활동 경험 중 다른 사람과 함께 같은 목표를 위해 노력한 경험 또는 어려운 기술적 문제를 해결한 경험에 대해 얘기해 주세요.\n# 답변3: 최근 인턴십 중인 회사에서 기존 서비스 코드를 수정하는 작업을 진행했습니다. 팀원들과 협업하여 파라미터 수정 작업을 성공적으로 마무리하였습니다. 어려움을 겪었지만 끈질기게 문제를 해결하며 프로젝트에 성공적으로 기여할 수 있었습니다. 이 경험을 통해 협업 능력과 문제 해결능력을 키워가고 있습니다.",
    "es_date": "2024-08-12"
  }
]

// 저장된 자소서 조회
const savedSelfIntroductionHistory = [
  {
    "member": {
        "user_id": 3,
        "id": "test3",
        "password": "$2a$10$G5CNvxO7nEUx8GnzgrMQqO1RtrvORs5xcteuCm6/AIk2WMDLz5rau",
        "name": "name3",
        "job": "IT개발·데이터",
        "jobKeyword": "SpringBoot",
        "email": "test2@test.com",
        "isAbove15": true,
        "privacyPolicyAccepted": true,
        "recordingAccepted": true
    },
    "details": [
        {
            "esd_no": 36,
            "eS_question": "테스트15 본인이 끝까지 파고들어 본 가장 의미있었던 개발 경험 또는 개발 활동에 대해 얘기해 주세요",
            "eS_answer": "올해 여름 진행했던 팀 프로젝트 경험에 대해 말씀드리겠습니다. 저는 웹 개발 공부를 하며 여러 개인 프로젝트를 수행하며 실력을 쌓아갔습니다. 하지만 혼자 강의를 통해 공부를 진행하다 보니 개인 프로젝트만 진행하였고 팀 프로젝트도 경험해보고 싶었습니다. 그래서 저는 프런트엔드와 백엔드를 구분해서 진행하는 프로젝트 진행을 위해 커뮤니티를 통해 팀을 구했습니다. 하지만 첫 팀 프로젝트 회의 날 저는 아무 말도 할 수 없었습니다. 지금까지 개인 프로젝트만 진행하다 보니 ERD 같은 기초적인 용어도 몰랐으며 Git 전략, slack, Notion 등 다양한 협업 툴에 대해서도 무지하였습니다. 그래서 저는 첫 회의 이후 저는 회의에서 나온 내용을 모두 필기해놓고 하나하나 검색을 통해 공부하였습니다. 또한 코드를 짜는 방법에 있어 기존에 제가 짜던 방식과 다른 부분이 많아 어려움을 겪었습니다. 그래서 프로젝트를 진행하면서 모르는 부분 하나하나 다 검색을 통해 사용법을 알아봤고 개인 프로젝트에 먼저 적용해 보고 사용법을 익히고 팀 프로젝트 코드에 적용하며 어려운 부분에 있어서는 팀원분들의 도움을 받아서 프로젝트를 진행하였습니다. 결국 제가 맡은 부분의 도메인, 서비스, 컨트롤러, DAO, Test 코드를 프로젝트를 통해 배운 방식을 통해 구현할 수 있었고 그 결과 첫 팀 프로젝트를 성공적으로 마무리할 수 있었습니다. 이후 진행한 두번째 팀 프로젝트 에서는 첫 프로젝트에서 제가 담당하지 않았던 부분의 파트를 담당해서 프로젝트를 진행하면서 더욱 성장할 수 있었습니다."
        },
        {
            "esd_no": 37,
            "eS_question": "지원하신 포지션과 연관지어, 학교 수업 또는 대외활동 등을 통해 습득한 'CS 지식'이나 '기술적 역량'에 대해 설명해 주세요.",
            "eS_answer": "개발자에게 에러는 항상 생각해야 할 문제입니다. 저는 에러를 해결할 줄 아는 능력이 개발자에게 중요하다고 생각합니다. 이런 에러 해결 능력의 기본이 되는 것이 컴퓨터에 대한 기초지식입니다. 저는 서버 개발 공부뿐만 아니라 컴퓨터 기초 지식인 자료구조, 알고리즘, OS, 컴퓨터 구조, 네트워크 등 다양한 공부를 학교 수업과 책, 과제 등을 통해 배운 내용을 예습 및 복습을 통해 제 것으로 만들기 위해 노력하였고 그 결과 대부분의 컴퓨터 전공과목에서 좋은 성적을 받아 전공학점이 4.5점 만점에 3.96이라는 좋은 결과를 얻을 수 있었습니다. 그뿐만 아니라 주 언어로 사용하는 Java 역시 Java의 정석 책을 통해 기초적인 람다 함수 및 Stream 같은 고급 문법 역시 공부하여 프로젝트에 적용하고 있으며 인터넷 강의와 책을 통해 Spring의 기초원리 특징 등에 대해 꾸준히 공부하며 많은 상황에 대처할 수 있는 개발자가 되기 위해 노력하고 있습니다."
        },
        {
            "esd_no": 38,
            "eS_question": "본인의 SW개발 활동 경험 중 다른 사람과 함께 같은 목표를 위해 노력한 경험 또는 어려운 기술적 문제를 해결한 경험에 대해 얘기해 주세요.",
            "eS_answer": "최근 인턴십 진행 중인 회사에서 기존의 서비스 코드에 있는 파라미터의 이름을 사용되는 목적에 맞게 수정하는 작업을 진행하였습니다. 넘어온 파라미터를 빌드패턴으로 제가 만든 파라미터로 변경 후 서버를 실행하니 기존에 작동하던 페이징이 작동을 하지 않았습니다. 원인을 찾아보기 위해 코드 중간중간에 로그를 찍어보며 넘어오는 값을 확인해본 결과 DAO 에서 조회함수의 들어가는 파라미터는 기존과 같은데 나올 때는 제가 작성한 코드는 페이징이 적용이 안 되는 것을 확인했습니다. 그래서 Mybatis XML 파일을 확인해봤지만 쿼리문에는 페이징이 적용되는 코드는 없어서 원인을 모르다가 Service 단에 있는 메서드에 붙어있는 어노테이션의 속성 중 하나에 들어가 있는 true, false 여부에 따라 쿼리 문이 XML 에서 적용이 되느냐 되지 않느냐의 차이였다는 것을 파악하였습니다. 그 이후 여러 가지 수정 끝에 파라미터 수정을 성공적으로 끝마칠 수 있었습니다. 이 경험을 통해서 프레임워크는 그저 가져다 쓰는 것이 아니라 직접 사용해보고 이해해야 된다는 것을 깨닫게 되었습니다."
        }
    ],
    "save": true,
    "es_no": 15,
    "es_feedback": "## 답변1 피드백:\n# 맞춤법 및 문법: 상세한 내용과 경험을 훌륭하게 설명했습니다. 단, \"다음\"과 같은 단어는 문맥에 맞게 사용해야 합니다. 예를 들어 \"대답 드리겠습니다\"가 바르게 됩니다.\n# 대체 단어 추천: \"실력을 쌓아갔습니다\" 부분은 \"실력을 향상시켰습니다\"로 바꿔보세요.\n# 질문 의도와 답변 방향성: 팀 프로젝트 경험을 통해 성장한 과정을 잘 보여준 답변입니다. 더욱 구체적인 기술적인 어려움과 해결과정을 더욱 강조하면 좋을 것 같습니다.\n\n## 답변2 피드백:\n# 맞춤법 및 문법: 매우 잘 작성되었습니다.\n# 대체 단어 추천: 특별한 수정 사항 없습니다.\n# 질문 의도와 답변 방향성: CS 지식과 기술적 역량에 대해 자세히 설명하여 요구사항을 충족시켰습니다. 더욱 구체적인 예시로 더욱 강조하면 좋을 것 같습니다.\n\n## 답변3 피드백:\n# 맞춤법 및 문법: 바르게 작성되었습니다. \n# 대체 단어 추천: \"파라미터의 이름을 사용되는 목적에 맞게 수정\" 부분은 \"파라미터의 이름을 목적에 맞게 수정\"으로 간결하게 수정할 수 있습니다.\n# 질문 의도와 답변 방향성: 어려운 기술적 문제 해결 경험을 잘 보여주었습니다. 좀더 어려운 기술적 문제와 해결과정을 더욱 강조하면 더욱 좋을 것 같습니다.",
    "es_date": "2024-08-12"
  }
];

// 로그인 엔드포인트
app.post('/api/login', (req, res) => {
  const { id, password } = req.body;
  const user = users.find(u => u.id === id && u.password === password);

  if (user) {
    const token = jwt.sign({ id: user.id }, 'your_jwt_secret', { expiresIn: '1h' });
    res.json({ token, name: user.name });
  } else {
    res.status(401).json({ message: 'Invalid credentials' });
  }
});

// 인터뷰 내역 제공 엔드포인트
app.get('/api/interviews', (req, res) => {
  res.json(interviewHistory);
});

// 특정 인터뷰 내역 제공 엔드포인트 추가
app.get('/api/interviews/:interviewId', (req, res) => {
  const { interviewId } = req.params;
  const interview = interviewHistory.find(i => i.interviewId === interviewId);

  if (interview) {
    res.json(interview);
  } else {
    res.status(404).json({ message: 'Interview not found' });
  }
});

// 모의면접 내역 저장 엔드포인트 설정
app.post('/api/interviews/save', (req, res) => {
  const interviewDetails = req.body;

  // 수신된 데이터를 콘솔에 출력하여 확인
  console.log('Received interview details:', interviewDetails);

  // 클라이언트에 응답
  res.status(200).send('Interview details received successfully');
});

// 자기소개서 피드백 반환
app.get('/api/selfIntroduction/feedback', (req, res) => {
  res.json(selfIntroductionFeedback);
});

// 자기소개서 저장 엔드포인트 설정
app.post('/api/selfIntroduction/save', (req, res) => {
  const { details } = req.body;

  // 수신된 데이터를 콘솔에 출력하여 확인
  console.log('Received interview details:', details);

  // 클라이언트에 응답
  res.status(200).send('self-introduction received successfully');
});

// 모든 첨삭된 자기소개서 조회 엔드포인트
app.get('/api/selfIntroduction/list', (req, res) => {
  res.json(allSelfIntroductionHistory);
});

// 저장된 자소서 내역 조회 엔드포인트 
app.get('/api/selfIntroduction/saved', (req, res) => {
  res.json(savedSelfIntroductionHistory);
});

// 특정 자소서 내역 제공 엔드포인트 추가
app.get('/api/selfIntroduction/:es_no', (req, res) => {
  const { es_no } = req.params;
  const selfIntroduction = allSelfIntroductionHistory.find(i => i.es_no === parseInt(es_no, 10)); // es_no를 정수로 변환하여 비교

  if (selfIntroduction) {
    res.json(selfIntroduction);
  } else {
    res.status(404).json({ message: 'selfIntroduction not found' });
  }
});

// 자기소개서 저장 상태 변경 엔드포인트
app.post('/api/selfIntroduction/save/:es_no', (req, res) => {
  const { es_no } = req.params;
  const { save } = req.body;
  const selfIntroduction = allSelfIntroductionHistory.find(i => i.es_no === parseInt(es_no, 10));

  if (selfIntroduction) {
    selfIntroduction.save = save;
    res.status(200).send('Save status updated successfully');
  } else {
    res.status(404).json({ message: 'selfIntroduction not found' });
  }
});

// 서버 시작
app.listen(port, () => {
  console.log(`Server is running on http://localhost:${port}`);
});

